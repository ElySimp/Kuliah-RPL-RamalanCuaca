name: PR Check

on:
  pull_request:
    branches:
      - main

jobs:
  pr-check:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Install dependencies (Flake8 for Python, Stylelint for CSS, HTMLhint for HTML, and Flask dependencies)
      - name: Install dependencies
        run: |
          pip install -r requirements.txt  # Install Python dependencies (including Flask)
          npm install -g stylelint htmlhint  # Install CSS and HTML linters

      # Check for conflicts with the main branch
      - name: Check for merge conflicts
        run: |
          git fetch origin main
          git merge-base --is-ancestor origin/main HEAD || echo "Merge conflicts detected" && exit 1

      # Check for Python files and run Flake8 if there are any Python changes
      - name: Check for Python files and run Flake8
        id: python_check
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '\.py$'; then
            echo "Python files detected, running flake8."
            flake8 .
          else
            echo "No Python files detected, skipping flake8."
          fi

      # Check for CSS files and run Stylelint if there are any CSS changes
      - name: Check for CSS files and run Stylelint
        id: css_check
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '\.css$'; then
            echo "CSS files detected, running Stylelint."
            stylelint "**/*.css"
          else
            echo "No CSS files detected, skipping Stylelint."
          fi

      # Check for HTML files and run HTMLhint if there are any HTML changes
      - name: Check for HTML files and run HTMLhint
        id: html_check
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '\.html$'; then
            echo "HTML files detected, running HTMLhint."
            htmlhint "**/*.html"
          else
            echo "No HTML files detected, skipping HTMLhint."
          fi

      # Check if Flask app runs without errors (does not start the server permanently, just tests if it can run)
      - name: Test Flask app runs without errors
        run: |
          # Export Flask environment variables (adjust if needed)
          export FLASK_APP=your_flask_app.py
          export FLASK_ENV=development
          
          # Run the Flask app in the background to test if it starts without errors
          python -m flask run &

          # Give the Flask app a second to start up
          sleep 3

          # Check if the app is running by sending a test request to a route (adjust route as needed)
          curl --silent --fail http://localhost:5000/your-test-route || exit 1

          # Optionally, stop the Flask app after the check
          kill %1